[[plugins]]
repo = 'neovim/nvim-lspconfig'
name = 'lspconfig'
if = 'has("nvim")'
on_event = 'BufReadPre'
hook_source = '''
" ./../lua/rc/plugins/lspconfig.lua
lua require('rc.plugins.lspconfig').setup()
'''

[[plugins]]
repo = 'williamboman/nvim-lsp-installer'
on_cmd = ['LspInstall', 'LspInstallInfo']
on_source = 'lspconfig'
hook_source = '''
lua require('nvim-lsp-installer').setup()
'''

[[plugins]]
repo = 'williamboman/mason.nvim'
on_cmd = ['Mason', 'MasonInstall']
hook_source = '''
lua require('mason').setup()
'''

[[plugins]]
repo = 'folke/trouble.nvim'
depends = ['nvim-web-devicons', 'lsp-colors.nvim']
on_cmd = 'TroubleToggle'
hook_add = '''
function s:map_trouble_actions()
  nmap <buffer><silent> <Leader>ld         <Cmd>TroubleToggle<CR>
  nmap <buffer><silent> <Leader>lr         <Cmd>TroubleToggle lsp_references<CR>
  nmap <buffer><silent> <Leader>xw  <Cmd>TroubleToggle workspace_diagnostics<CR>
  nmap <buffer><silent> <Leader>xd  <Cmd>TroubleToggle document_diagnostics<CR>
  nmap <buffer><silent> <Leader>xq  <Cmd>TroubleToggle loclist<CR>
endfunction

autocmd NvimLspRc LspAttach * call <SID>map_trouble_actions()
'''

[[plugins]]
repo = 'j-hui/fidget.nvim'
on_event = 'LspAttach'
hook_source = '''
lua require('rc.plugins.fidget').setup()
'''

[[plugins]]
repo = 'folke/lsp-colors.nvim'
on_event = 'LspAttach'
hook_source = '''
" ./../lua/rc/plugins/lsp-colors.lua
lua require('rc.plugins.lsp-colors').setup()
'''

[[plugins]]
repo = 'glepnir/lspsaga.nvim'
on_cmd = 'Lspsaga'
hook_add = '''
function s:map_lspsaga()
  nnoremap <silent><buffer> <Leader>r <Cmd>Lspsaga rename<CR>
  nnoremap <silent><buffer> <Leader><CR> <Cmd>Lspsaga code_action<CR>
  nnoremap <silent><buffer> ]d <Cmd>Lspsaga diagnostic_jump_next<CR>
  nnoremap <silent><buffer> [d <Cmd>Lspsaga diagnostic_jump_prev<CR>
  if &ft !=# 'vim'
    nnoremap <silent><buffer> K <Cmd>Lspsaga hover_doc<CR>
  endif
endfunction

autocmd NvimLspRc LspAttach * call <SID>map_lspsaga()
'''
hook_source = '''
" ./../lua/rc/plugins/lsp-colors.lua
lua require('rc.plugins.lspsaga').setup()
'''
